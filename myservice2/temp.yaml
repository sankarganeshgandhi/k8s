---
# Source: myservice2/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: myservice2
  labels:
    helm.sh/chart: myservice2-0.0.1
    app.kubernetes.io/name: myservice2
    app.kubernetes.io/instance: myservice2
    app.kubernetes.io/component: myservice2
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: myservice2/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: myservice2-config
  labels:
    helm.sh/chart: myservice2-0.0.1
    app.kubernetes.io/name: myservice2
    app.kubernetes.io/instance: myservice2
    app.kubernetes.io/component: myservice2
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
data:
  KAFKA_BOOTSTRAP_SERVERS: "service1-kafka-bootstrap:9092"
  QUARKUS_HTTP_PORT: "8080"
  QUARKUS_JAEGER_ENDPOINT: "http://jaeger-collector.tracing:14268/api/traces"
  QUARKUS_JAEGER_PROPAGATION: "b3"
  QUARKUS_LOG_CONSOLE_JSON_PROVIDERS_CONTEXT_CLUSTER: "local-ag"
  QUARKUS_LOG_CONSOLE_JSON_PROVIDERS_CONTEXT_DATACENTER: "local"
  QUARKUS_LOG_CONSOLE_JSON_PROVIDERS_CONTEXT_LOCATION: "local"
  QUARKUS_LOG_CONSOLE_PROVIDERS_CONTEXT_CLUSTER: "local-ag"
  QUARKUS_LOG_CONSOLE_PROVIDERS_CONTEXT_DATACENTER: "local"
  QUARKUS_LOG_CONSOLE_PROVIDERS_CONTEXT_LOCATION: "local"
  QUARKUS_SWAGGER_UI_ALWAYS_INCLUDE: "true"
  STOCK_RESERVING_CLIENT_MP_REST_URL: "http://myservice1:8080"
---
# Source: myservice2/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: myservice2
  labels:
    helm.sh/chart: myservice2-0.0.1
    app.kubernetes.io/name: myservice2
    app.kubernetes.io/instance: myservice2
    app.kubernetes.io/component: myservice2
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: myservice2
    app.kubernetes.io/instance: myservice2
    app.kubernetes.io/component: myservice2
---
# Source: myservice2/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myservice2
  labels:
    helm.sh/chart: myservice2-0.0.1
    app.kubernetes.io/name: myservice2
    app.kubernetes.io/instance: myservice2
    app.kubernetes.io/component: myservice2
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: myservice2
      app.kubernetes.io/instance: myservice2
      app.kubernetes.io/component: myservice2
  template:
    metadata:
      annotations:
        checksum/config: 589d80f889f23da4c26b24bcae8276879c53935cb856f5348e4fc619602d03b0
      labels:
        app.kubernetes.io/name: myservice2
        app.kubernetes.io/instance: myservice2
        app.kubernetes.io/component: myservice2
    spec:
      serviceAccountName: myservice2
      securityContext:
        {}
      containers:
        - name: myservice2
          securityContext:
            {}
          image: "k3d--registry:/local/myservice2:0.0.1"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
          env:
            - name: QUARKUS_LOG_CONSOLE_JSON_PROVIDERS_CONTEXT_NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: QUARKUS_LOG_CONSOLE_JSON_PROVIDERS_CONTEXT_POD
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: QUARKUS_LOG_CONSOLE_JSON_PROVIDERS_CONTEXT_CONTAINER
              value: myservice2      
            - name: QUARKUS_LOG_CONSOLE_PROVIDERS_CONTEXT_NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: QUARKUS_LOG_CONSOLE_PROVIDERS_CONTEXT_POD
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: QUARKUS_LOG_CONSOLE_PROVIDERS_CONTEXT_CONTAINER
              value: myservice2      
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: myservice2-config
          resources:
            {}
