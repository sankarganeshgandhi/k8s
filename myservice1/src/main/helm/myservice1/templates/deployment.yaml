apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myservice1.fullname" . }}
  labels:
    {{- include "myservice1.labels" . | nindent 4 }}
spec:        
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "myservice1.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        {{- if .Values.vault.enabled }}
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/role: "vault-role"
        vault.hashicorp.com/agent-inject-secret-app-db-creds: {{ .Values.vault.secret_path }}
        vault.hashicorp.com/agent-inject-template-app-db-creds: |
          {{`
          {{ with secret "`}} {{- .Values.vault.secret_path -}}  {{`" }}
          export DB_USERNAME={{ .Data.username }}
          export DB_PASSWORD={{ .Data.password }}
          {{ end }}
          `}}
        #vault.hashicorp.com/agent-inject-template-app-db-creds: |-
        #  {{`{{- with secret `}}"{{ .Values.vault.secret_path }}"{{` -}}`}}
        #  {{`{{- range $k, $v := .Data.data }}`}}
        #  {{`{{ $k }}={{ $v }}`}}
        #  {{`{{- end }}`}}
        #  {{`{{- end }}`}}
        #vault.hashicorp.com/agent-inject-template-app-db-creds: |-
        #  {{`{{- with secret `}}"{{ .Values.vault.secret_path }}"{{` -}}`}}
        #  {{` export `}}{{ .Values.vault.DB_EnvUserName }}={{`{{ .Data.data.`}}{{ .Values.vault.DB_SecretUserName }} {{`}}`}}
        #  {{` export DB_PASSWORD={{ .Data.data.password }} `}}
        #  {{` {{- end }} `}}
        ## Environment variable export template
        #vault.hashicorp.com/agent-inject-template-app-db-creds.txt: |-
        #  {{`{{- with secret `}}"{{ .Values.vault.secret_path }}"{{` -}}`}}
        #  {{`{{- range $k, $v := .Data.data }}`}}
        #  {{`{{ $k }}={{ $v }}`}}
        #  {{`{{- end }}`}}
        #  {{`{{- end }}`}}
        #vault.hashicorp.com/agent-configmap: {{ include "myservice1.fullname" . }}-config
        #vault.hashicorp.com/ca-cert: "/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        #vault.hashicorp.com/ca-cert: "/vault/injector-tls/tls.crt"
        #vault.hashicorp.com/client-cert: "/vault/tls/client.crt"
        #vault.hashicorp.com/client-key: "/vault/tls/tls.key"
        #vault.hashicorp.com/tls-secret: "injector-tls"
        vault.hashicorp.com/log-level: "trace"
        {{- end }}
      labels:
        {{- include "myservice1.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "myservice1.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: q/health/live
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: q/health/ready
          #    port: http
          env:
            - name: QUARKUS_LOG_CONSOLE_JSON_PROVIDERS_CONTEXT_NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: QUARKUS_LOG_CONSOLE_JSON_PROVIDERS_CONTEXT_POD
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: QUARKUS_LOG_CONSOLE_JSON_PROVIDERS_CONTEXT_CONTAINER
              value: {{ .Chart.Name }}      
            - name: QUARKUS_LOG_CONSOLE_PROVIDERS_CONTEXT_NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: QUARKUS_LOG_CONSOLE_PROVIDERS_CONTEXT_POD
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: QUARKUS_LOG_CONSOLE_PROVIDERS_CONTEXT_CONTAINER
              value: {{ .Chart.Name }}      
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: {{ include "myservice1.fullname" . }}-config
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}