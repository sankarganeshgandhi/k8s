## - THIS SECTION IS FOR INFRASTRUCUTRE CONFIGURATIONS THAT DO NOT CHANGE IN MOST OF THE CASES                     - ##
imagePullSecrets: []

## - ------------------------------------------------------------------------------------------------------------- - ##

global:
  platformVersion: 1.0

service:
  image:
    repository: nginx
    ## Overrides the image tag whose default is the chart appVersion.
    tag: ""
  type: ClusterIP
  port: 80
  replicaCount: 3

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: cluster-domain-name.local
      paths:
      - path: /
        pathType: Prefix
  tls: []
   #- secretName: chart-example-tls
   #  hosts:
   #    - chart-example.local

cronJob:
  jobs:
    - jobName: cronJob1
      image:
        repository: nginx
        ## Overrides the image tag whose default is the chart appVersion.
        tag: ""
      shellCommand: [ '/bin/sh' ]
      args: |
        '-c',
        'echo {\"type\":\"StaleOrderCancellationTrigger\",\"id\":\"$$(cat /proc/sys/kernel/random/uuid)\",\"source\":\"Scheduled StaleOrderCancellationTrigger job\",\"time\":\"$$(date --utc +%FT%T.%3NZ)\",\"specversion\":\"1.0\",\"data\":{ }} | kafka-console-producer --broker-list {{ .Values.kafka.connectionConfig.connectionUrl }} --topic {{ .Values.kafka.producer.internalTopic }}'
      restartPolicy: Never

## Kafka configurations go here
kafka:
  producer:
    internalTopic: abc
  ## Enable this if you have to spin off a Kafka server instance
  server: {}
    # name: kafka
    ## By default the replicas has to be 3 or more in the odd number incremental
    # replicas: 1
    ## By default the topicReplicationFactor has to be 3 or more in the odd number incremental
    # topicReplicationFactor: 1
  ## This section is for KafkaTopic and KafkaUser creation  
  kafkaTopic: {}
    ## Kafka cluster name where the Topic has to be created
    # clusterName: kafka
    ## for authorization to work create the topics and users in the Kafka's namespace
    # userName: kafkaUser1
  connectionConfig:
    ## URL of the Kafka bootstrap server. At this moment we do not have multiple Kafka clusters to connect with.
    ## when the needs to connect multi kafka arise we shall revisit this config
    connectionUrl: kafka-kafka-bootstrap.kafka.svc:9092
    ## Following is to configure authentication through TLS communication using certs

## Database configurations go here
database:
  ## platform denotes the database platform on which the ITM will persist the data. It can be either oracle, ostgresql
  platform: postgresql
  ## OPTIONAL field to create a namespace scoped database instance within the namespace of the service. If this is not enabled, it is
  ## understood that the service will use/connect a database that was deployed somewhere else
  server: {}
    # databaseSchemaName: ""
  connectionConfig:
    connectionUrl: jdbc:postgresql://wplat-psqldb:5432/wplat1-3
    ## In general we have to use the credentials from the secrets created in the namespace. This shall be followed in all the clusters
    credentials:
      secrets:
        secretName: mycompany-wplat-database-credentials
        ## name of the secret key that contains the username of the database
        userNameKey: username
        ## name of the secret key that contains the password of the username
        passwordKey: password
  migration: {}
    # image:
    #   repository: nginx
    #   ## Overrides the image tag whose default is the chart appVersion.
    #   tag: ""
    # connectionConfig:
    #   connectionUrl: jdbc:postgresql://wplat-psqldb:5432/wplat1-3
    #   ## In general we have to use the credentials from the secrets created in the namespace. This shall be followed in all the clusters
    #   credentials:
    #     secrets:
    #       secretName: mycompany-wplat-database-credentials
    #       ## name of the secret key that contains the username of the database
    #       userNameKey: username
    #       ## name of the secret key that contains the password of the username
    #       passwordKey: password
