apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service.name" . }}
  labels:
    {{- include "service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      # volumes:
      #   - name: kafka-truststore-jks
      #     secret:
      #       secretName: truststore-jks
      #   - name: kafka-user-p12
      #     secret:
      #       secretName: user-p12
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # volumeMounts:
          #   - mountPath: "/etc/kafka-credentials/kafka-truststore-jks"
          #     name: kafka-truststore-jks
          #     readOnly: true
          #   - mountPath: "/etc/kafka-credentials/kafka-user-p12"
          #     name: kafka-user-p12
          #     readOnly: true
          livenessProbe:
            httpGet:
              path: {{ .Values.service.livenessProbeUrl }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.service.readinessProbeUrl }}
              port: http
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: {{ include "service.name" . }}-config
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
