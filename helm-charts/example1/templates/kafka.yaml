{{- if .Values.kafka.server.enabled -}}
apiVersion: kafka.strimzi.io/v1beta1
kind: Kafka
metadata:
  name: {{ include "service.name" . }}-{{ .Values.kafka.server.name }}
  labels:
    {{- include "service.labels" . | nindent 4 }}
spec:
  kafka:
    version: 2.6.0
    replicas: {{ .Values.kafka.server.config.replicas }}
    listeners:
      {{- toYaml .Values.kafka.server.config.listeners | nindent 6 }}
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      log.message.format.version: "2.6"
      zookeper.connection.timeout.ms: 3000
      zookeper.session.timeout.ms: 3000
      controlled.shutdown.enable: false
    storage:
      type: ephemeral
  zookeeper:
    replicas: {{ .Values.kafka.server.config.replicas }}
    storage:
      type: ephemeral
    jvmOptions:
      javaSystemProperties:
        - name: zookeeper.ssl.hostnameVerification
          value: "false"
        - name: zookeeper.ssl.quorum.hostnameVerification
          value: "false"
        - name: zookeeper.electionPortBindRetry
          value: "100"
  entityOperator:
    topicOperator: {}
    userOperator: {}
{{- end }}
---
### This is to create the Kafka Topic
{{- if .Values.kafka.topics.enabled -}}
{{- $kafkaServerName := .Values.kafka.topics.kafkaClusterName }}
{{- range $key, $topicConfig := .Values.kafka.topics.config }}
apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaTopic
metadata:
  name: {{ $topicConfig.name }}
  labels:
    strimzi.io/cluster: {{ $kafkaServerName }}
spec:
  partitions: {{ $topicConfig.partitions }}
  replicas: {{ $topicConfig.replicas }}
  config:
    retention.ms: {{ $topicConfig.retentionInMS }}
    segment.bytes: {{ $topicConfig.segmentInBytes }}
---
{{- end }}
{{- end }}
---
### This manifest create the Kafka user along with the ACLs for the Kafka Topic mentioned
### This manifest create the Kafka user along with the ACLs for the Kafka Topic mentioned
{{- if .Values.kafka.topics.enabled -}}
{{- $kafkaServerName := .Values.kafka.topics.kafkaClusterName }}
  {{- range $key, $topic := .Values.kafka.topics.config }}
    {{- range $key, $user := $topic.users }}
apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaUser
metadata:
  name: {{ $user.userName }}
  labels:
    strimzi.io/cluster: {{ $kafkaServerName }}
spec:
  authentication:
    type: tls
  authorization:
    type: simple
    acls:
      - resource:
          type: group
          name: {{ $user.consumerGroup }}
          patternType: literal
        operation: '*'
        host: '*'
      {{- range $aclKey, $aclValue := $user.userACL }}
      - resource:
          type: topic
          name: {{ $topic.name }}
          patternType: literal
        operation: {{ $aclValue }}
        host: '*'
      {{- end }}
---
    {{- end }}
  {{- end }}
{{- end }}
